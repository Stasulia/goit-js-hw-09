{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EAEFF,EAAQ,CAACH,WAAUC,UAGnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,KApBU,CACXQ,KAAMC,SAASC,cAAc,aAC7BV,MAAOS,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASI,iBAAiB,mBAClCC,UAAWL,SAASC,cAAc,YAE/BF,KAAKO,iBAAiB,SAiB3B,SAAiBC,GACfA,EAAMC,iBAMN,IALA,IAA8BC,EAAAF,EAAMG,cAAcC,SAA3CC,EAAuBH,EAAvBlB,MAAOW,EAAgBO,EAAhBP,KAAMC,EAAUM,EAAVN,OAChBU,EAAaC,OAAOF,EAAMG,OAC1BC,EAAYF,OAAOZ,EAAKa,OACxBE,EAAcH,OAAOX,EAAOY,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAGrC7B,EAAc6B,EAFdL,GAAcG,GAGbG,MAAK,SAAAC,G,IAAE9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAChB8B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,IAEvEkC,OAAM,SAAAL,G,IAAE9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjB8B,EAAAlC,GAASmC,OAAOI,QAAQ,sBAAqCF,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,IAErEgB,EAAMG,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelectorAll('[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button')\n}\nrefs.form.addEventListener('click', handler);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n  if (shouldResolve) {\n    // Fulfill\n    resolve({position, delay});\n  } else {\n    // Reject\n    reject({position, delay});\n  }\n}, delay);\n});\n}\n\nfunction handler(event) {\n  event.preventDefault();\n  const {delay, step, amount} = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    event.currentTarget.reset();\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","step","amount","querySelectorAll","btnSubmit","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","inputDelay","Number","value","inputStep","inputAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.337d7641.js.map"}