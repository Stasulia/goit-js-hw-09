{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAajC,OAZkB,IAAIC,SAAQ,CAACC,EAASC,KACtC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACPH,EAEFF,EAAQ,C,SAACH,E,MAAUC,IAGnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,EApBI,CACXQ,KAAMC,SAASC,cAAc,aAC7BV,MAAOS,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASI,iBAAiB,mBAClCC,UAAWL,SAASC,cAAc,YAE/BF,KAAKO,iBAAiB,SAkB3B,SAAiBC,GACfA,EAAMC,iBACN,MAAOjB,MAAAkB,EAAKP,KAAEA,EAAIC,OAAEA,GAAUI,EAAMG,cAAcC,SAClD,IAAIC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOX,EAAKY,OACxBE,EAAcH,OAAOV,EAAOW,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCL,GAAcG,EAEd1B,EAAc4B,EAAGL,GAChBM,MAAK,EAAC5B,SAACA,EAAQC,MAAEA,MAChB4B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqB/B,QAAiBC,MAAU,IAEzE+B,OAAM,EAAChC,SAACA,EAAQC,MAAEA,MACjB4B,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBjC,QAAeC,MAAU,IAEvEgB,EAAMG,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelectorAll('[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button')\n}\nrefs.form.addEventListener('click', handler);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n  if (shouldResolve) {\n    // Fulfill\n    resolve({position, delay});\n  } else {\n    // Reject\n    reject({position, delay});\n  }\n}, delay);\n});\nreturn promise;\n}\n\nfunction handler(event) {\n  event.preventDefault();\n  const {delay, step, amount} = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    event.currentTarget.reset();\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","step","amount","querySelectorAll","btnSubmit","addEventListener","event","preventDefault","delay1","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.54a6cc7a.js.map"}