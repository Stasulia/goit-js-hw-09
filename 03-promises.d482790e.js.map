{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAajC,OAZkB,IAAIC,SAAQ,SAACC,EAASC,GACtC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EAEFF,EAAQ,CAACH,WAAUC,UAGnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAdYQ,SAASC,cAAc,aAC/BC,iBAAiB,UAkBxB,SAAiBC,GACfA,EAAMC,iBAMN,IALA,IAA8BC,EAAAF,EAAMG,cAAcC,SAA3CC,EAAuBH,EAAvBb,MAAOiB,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,OAChBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAGrC1B,EAAc0B,EAFdL,GAAcG,GAGbG,MAAK,SAAAC,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAChB2B,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEvE+B,OAAM,SAAAL,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAErEW,EAAMG,cAAcmB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form.form');\nformEl.addEventListener('submit', handler);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n  if (shouldResolve) {\n    // Fulfill\n    resolve({position, delay});\n  } else {\n    // Reject\n    reject({position, delay});\n  }\n}, delay);\n});\nreturn promise;\n}\n\nfunction handler(event) {\n  event.preventDefault();\n  const {delay, step, amount} = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    event.currentTarget.reset();\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.d482790e.js.map"}